#include <iostream>
#include<windows.h>
#include"random"
#include "cstring"
#define Max 100
using namespace std;
struct people {
    char name[20];
    int age;
    string sex;
    string phone;
    string address;
};
void add_person(people *p) {
    cout<<"请输入姓名："<<endl;
    cin>>p->name;
    cout<<"请输入年龄："<<endl;
    cin>>p->age;
    cout<<"请输入性别："<<endl;
    cin>>p->sex;
    cout<<"请输入电话："<<endl;
    cin>>p->phone;
    cout<<"请输入地址："<<endl;
    cin>>p->address;
    cout<<"添加成功"<<endl;
    system("pause");
    system("cls");
}
void show_person(people *p) {
    cout<<"姓名："<<p->name<<endl;
    cout<<"年龄："<<p->age<<endl;
    cout<<"性别："<<p->sex<<endl;
    cout<<"电话："<<p->phone<<endl;
    cout<<"地址："<<p->address<<endl;
    system("pause");
    system("cls");
}
void delete_person(people *p) {
    cout<<"请输入要删除的人的姓名："<<endl;
    char name[20];
    cin>>name;
    for(int i=0;i<Max;i++) {
        if(strcmp(p[i].name,name)==0) {//比较字符用strcmp()
            for(int j=i;j<Max-1;j++) {
                p[j]=p[j+1];
            }
            cout<<"删除成功"<<endl;
            system("pause");
            system("cls");
            return;
        }
    }
}
void check_person(people *p) {
    cout<<"请输入要查找的人的姓名："<<endl;
    char name[20];
    cin>>name;
    for(int i=0;i<Max;i++) {
        if(strcmp(p[i].name,name)==0) {
            show_person(&p[i]);
            return;
        }
    }
}
void edit_person(people *p) {
    cout<<"请输入要修改的人的姓名："<<endl;
    char name[20];
    cin>>name;
    for(int i=0;i<Max;i++) {
        if(strcmp(p[i].name,name)==0) {
            cout<<"请输入新的姓名："<<endl;
            cin>>p[i].name;
            cout<<"请输入新的年龄:"<<endl;
            cin>>p[i].age;
            cout<<"请输入新的性别："<<endl;
            cin>>p[i].sex;
            cout<<"请输入新的电话："<<endl;
            cin>>p[i].phone;
            cout<<"请输入新的地址："<<endl;
            cin>>p[i].address;
            cout<<"修改成功"<<endl;
            system("pause");
            system("cls");
            return;
    }
}
}
void clear_person(people *p) {
    cout<<"清空通讯录"<<endl;
    for(int i=0;i<Max;i++) {
        p[i].name[0]='\0';
        p[i].age=0;
        p[i].sex[0]='\0';
        p[i].phone[0]='\0';
        p[i].address[0]='\0';
    }
}
int menu()
{
    cout<<"*********************\t"<<endl;
    cout<<"*  1. 添加联系人     *\t"<<endl;
    cout<<"*  2. 显示联系人     *\t"<<endl;
    cout<<"*  3. 查找联系人     *\t"<<endl;
    cout<<"*  4. 删除联系人     *\t"<<endl;
    cout<<"*  5. 修改联系人     *\t"<<endl;
    cout<<"*  6. 清空联系人     *\t"<<endl;
    cout<<"*  0. 退出通讯录     *\t"<<endl;
    cout<<"*********************\t"<<endl;
    return 0;
}
int main()
{
    int num;
    struct people *p= new people[Max];
    while(true) {
        menu();
        cout<<"请输入你的选择："<<endl;
        cin>>num;
        switch (num)
        {
            case 1:
                cout<<"添加联系人"<<endl;
            add_person(p);
            break;
            case 2:
                cout<<"显示联系人"<<endl;
            show_person(p);
            break;
            case 3:
                cout<<"查找联系人"<<endl;
            check_person(p);
            break;
            case 4:
                cout<<"删除联系人"<<endl;
            delete_person(p);
            break;
            case 5:
                cout<<"修改联系人"<<endl;
            edit_person(p);
            break;
            case 6:
                cout<<"清空联系人"<<endl;
            clear_person(p);
            break;
            case 0:
                cout<<"退出通讯录,欢迎下次继续使用"<<endl;
            system("pause");
            return 0;
            break;
            default:
                cout<<"输入有误，请重新输入"<<endl;
        }
    }
    return 0;
}
